"""Final clean migration from restored backup

Revision ID: 109e98d87010
Revises: 
Create Date: 2025-10-11 10:14:41.713996

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '109e98d87010'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('predefined_storage_locations')
    op.drop_table('drying_session')
    op.drop_table('filament_usage_log')
    op.drop_table('storage_location')
    with op.batch_alter_table('cost_calculation', schema=None) as batch_op:
        batch_op.create_foreign_key(batch_op.f('fk_cost_calculation_job_id_job'), 'job', ['job_id'], ['id'])

    with op.batch_alter_table('filament_type', schema=None) as batch_op:
        batch_op.drop_column('avg_consumption_g_per_hour')
        batch_op.drop_column('storage_temperature_max')
        batch_op.drop_column('shelf_life_months')
        batch_op.drop_column('drying_duration_hours')
        batch_op.drop_column('drying_temperature')
        batch_op.drop_column('storage_humidity_max')
        batch_op.drop_column('storage_temperature_min')

    with op.batch_alter_table('job', schema=None) as batch_op:
        batch_op.add_column(sa.Column('actual_filament_used_g', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('actual_cost', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('estimated_print_duration_s', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('estimated_material_g', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('complexity_score', sa.Integer(), nullable=True))
        batch_op.alter_column('priority_score',
               existing_type=sa.REAL(),
               type_=sa.Float(),
               nullable=False,
               existing_server_default=sa.text('(0.0)'))
        batch_op.alter_column('is_on_critical_path',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('0'))
        batch_op.create_foreign_key(batch_op.f('fk_job_project_id_project'), 'project', ['project_id'], ['id'], ondelete='SET NULL')
        batch_op.create_foreign_key(batch_op.f('fk_job_parent_job_id_job'), 'job', ['parent_job_id'], ['id'], ondelete='SET NULL')
        batch_op.drop_column('personnel_cost')
        batch_op.drop_column('employee_hourly_rate')
        batch_op.drop_column('target_quantity_parts')
        batch_op.drop_column('material_number')
        batch_op.drop_column('post_processing_time_min')
        batch_op.drop_column('machine_cost')
        batch_op.drop_column('material_short_text')
        batch_op.drop_column('material_cost')
        batch_op.drop_column('preparation_time_min')
        batch_op.drop_column('estimated_end_date')
        batch_op.drop_column('total_cost')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('job', schema=None) as batch_op:
        batch_op.add_column(sa.Column('total_cost', sa.FLOAT(), nullable=True))
        batch_op.add_column(sa.Column('estimated_end_date', sa.DATE(), nullable=True))
        batch_op.add_column(sa.Column('preparation_time_min', sa.INTEGER(), nullable=True))
        batch_op.add_column(sa.Column('material_cost', sa.FLOAT(), nullable=True))
        batch_op.add_column(sa.Column('material_short_text', sa.VARCHAR(length=100), nullable=True))
        batch_op.add_column(sa.Column('machine_cost', sa.FLOAT(), nullable=True))
        batch_op.add_column(sa.Column('post_processing_time_min', sa.INTEGER(), nullable=True))
        batch_op.add_column(sa.Column('material_number', sa.VARCHAR(length=50), nullable=True))
        batch_op.add_column(sa.Column('target_quantity_parts', sa.INTEGER(), nullable=True))
        batch_op.add_column(sa.Column('employee_hourly_rate', sa.FLOAT(), nullable=True))
        batch_op.add_column(sa.Column('personnel_cost', sa.FLOAT(), nullable=True))
        batch_op.drop_constraint(batch_op.f('fk_job_parent_job_id_job'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_job_project_id_project'), type_='foreignkey')
        batch_op.alter_column('is_on_critical_path',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('0'))
        batch_op.alter_column('priority_score',
               existing_type=sa.Float(),
               type_=sa.REAL(),
               nullable=True,
               existing_server_default=sa.text('(0.0)'))
        batch_op.drop_column('complexity_score')
        batch_op.drop_column('estimated_material_g')
        batch_op.drop_column('estimated_print_duration_s')
        batch_op.drop_column('actual_cost')
        batch_op.drop_column('actual_filament_used_g')

    with op.batch_alter_table('filament_type', schema=None) as batch_op:
        batch_op.add_column(sa.Column('storage_temperature_min', sa.INTEGER(), nullable=True))
        batch_op.add_column(sa.Column('storage_humidity_max', sa.INTEGER(), nullable=True))
        batch_op.add_column(sa.Column('drying_temperature', sa.INTEGER(), nullable=True))
        batch_op.add_column(sa.Column('drying_duration_hours', sa.INTEGER(), nullable=True))
        batch_op.add_column(sa.Column('shelf_life_months', sa.INTEGER(), nullable=True))
        batch_op.add_column(sa.Column('storage_temperature_max', sa.INTEGER(), nullable=True))
        batch_op.add_column(sa.Column('avg_consumption_g_per_hour', sa.FLOAT(), nullable=True))

    with op.batch_alter_table('cost_calculation', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_cost_calculation_job_id_job'), type_='foreignkey')

    op.create_table('storage_location',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('code', sa.VARCHAR(length=20), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('max_spools', sa.INTEGER(), nullable=True),
    sa.Column('temperature_controlled', sa.BOOLEAN(), server_default=sa.text("'0'"), nullable=False),
    sa.Column('humidity_controlled', sa.BOOLEAN(), server_default=sa.text("'0'"), nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text("'1'"), nullable=False),
    sa.PrimaryKeyConstraint('id', name='pk_storage_location'),
    sa.UniqueConstraint('code', name='uq_storage_location_code')
    )
    op.create_table('filament_usage_log',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('spool_id', sa.INTEGER(), nullable=False),
    sa.Column('job_id', sa.INTEGER(), nullable=True),
    sa.Column('weight_before_g', sa.FLOAT(), nullable=False),
    sa.Column('weight_after_g', sa.FLOAT(), nullable=False),
    sa.Column('usage_g', sa.FLOAT(), nullable=False),
    sa.Column('timestamp', sa.DATETIME(), nullable=False),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['job.id'], name='fk_filament_usage_log_job_id_job'),
    sa.ForeignKeyConstraint(['spool_id'], ['filament_spool.id'], name='fk_filament_usage_log_spool_id_filament_spool'),
    sa.PrimaryKeyConstraint('id', name='pk_filament_usage_log')
    )
    op.create_table('drying_session',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('spool_id', sa.INTEGER(), nullable=False),
    sa.Column('temperature', sa.INTEGER(), nullable=False),
    sa.Column('duration_hours', sa.INTEGER(), nullable=False),
    sa.Column('start_time', sa.DATETIME(), nullable=False),
    sa.Column('end_time', sa.DATETIME(), nullable=False),
    sa.Column('actual_end_time', sa.DATETIME(), nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), server_default=sa.text("'active'"), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['spool_id'], ['filament_spool.id'], name='fk_drying_session_spool_id_filament_spool'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='fk_drying_session_user_id_user'),
    sa.PrimaryKeyConstraint('id', name='pk_drying_session')
    )
    op.create_table('predefined_storage_locations',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('code', sa.VARCHAR(length=20), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('max_spools', sa.INTEGER(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text("'1'"), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.PrimaryKeyConstraint('id', name='pk_predefined_storage_locations'),
    sa.UniqueConstraint('code', name='uq_predefined_storage_locations_code')
    )
    # ### end Alembic commands ###
